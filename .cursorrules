<context>
You are an AI embed in a project that use:
- Next.js
- React
- TailwindCSS
- Shadcn ui
- Convex
</context>

<project>

# Name of project

University Social Network

## Overview

Provide students with a secure, intuitive, and responsive platform to foster communication and collaboration on campus. The goal is to allow everyone to connect, exchange messages, participate in thematic groups, and learn about university events.

## Key features

### Authentication

Comme il s'agit d'un réseau social pour une université, seul des étudiants inscrits à l'université, le personnel(professeur, comptable, etc...) et les administrateurs pourront avoir accès à cette plateforme.
De ce fait, les étudiants et le personnel devront se connecter à travers leur matricule et mot de passe pour accéder à l'application. Quand aux adminstrateurs, ils peuvent se connecter avec soit par mail ou par Google.

Pour l'instant, on ne peut pas avoir accès à la base de donnée de l'université pour récupérer les informations de l'utilisateur à partir du matricule saisi dans la plateforme. Nous allons donc procéder ainsi:
Dans ce cas de figure, il y'aura une page d'inscription et de connexion.
L'utilisateur accède à une page d'inscription dédiée. Pour un étudiant, il remplira matricule, nom, prénom, email, numéro de téléphone, fonction(étudiant, professeur, etc...), filière, salle de classe. A la soumission du formulaire, ses informations sont enregistrées dans la base de donnée de la plateforme en attente de validation de son inscription par un administrateur. un email est par la suite envoyé à l'utilisateur pour l'informer que sa demande d'inscription est en attente de validation.
De son côté, l'administrateur peut se servir du registre du personnel ou de la liste des étudiants pour valider l'inscription en cliquant sur le lien envoyé par mail ou en se connectant à la plateforme avec son compte Google.
Une fois validé, un mail est envoyé à l'utilisateur avec comme identifiant un mot de passe unique qu'il utilisera pour se connecter à la platefome.
En cas de rejet de l'inscription:

- Suprimer l'utilisateur de la base de donnée de la plateforme
- Envoyer un mail à l'utilisateur pour le signaler

### User Management

A user is identified by:

- Profile picture (optional)
- Cover photo (optional)
- User's last name
- User's first name
- User's email
- User's registration number
- User's phone number
- User's function (student, professor, accountant, HR, etc.)
- User's field of study (for students)
- User's classroom (for students)
- User's status (active, inactive, pending). Determines if the user can connect to the application.
- User's role (USER, ADMIN, SUPERADMIN)
- User's permissions. By default, a user has the following permissions: COMMENT, LIKE. Some permissions such as: CREATE GROUP, CREATE EVENT, CREATE POST, CREATE USER and ALL can be added by the administrator.
- User's interests (optional)
- User's social networks (optional): e.g., personal website, LinkedIn, etc.
- User's bio (optional)
- Skills (optional): marketing, communication, typescript development, etc.
- isOnline (online or not)

1. **Registration and validation**

- A user registers with their personal information (profile picture, last name, first name, email, registration number, phone number, choice of function, field of study and classroom (for students only))
- An administrator validates the registration (via email or in-app)
- The user receives an activation notification (via email)

2. **User profile**

- A user views/modifies their profile
- A user sets their interests, professional competencies, skills, and biography

3. **Permission management**

- An administrator assigns permissions to a user
- An administrator appoints a user as administrator

### Group Management

There are two types of groups: **Discussion Rooms** and **Forums**.
A forum, unlike a discussion room, is a group where users can publish content and events. Discussion rooms will only allow students to exchange messages, similar to WhatsApp groups.

A forum is identified by:

- Its author
- Profile picture
- Cover photo
- Its name
- Its description (brief, max 100 words, optional)
- About the group (long description: max 500 words)
- Group interests (Academic, Technology, Sports, Social, etc.)
- The main category of the group (Academic, Technology, Sports, Social, etc.)
- Status (active, suspended)
- Visibility (public or private)

A discussion room is identified by:

- Its author
- Profile picture
- Cover photo
- Its name
- Its description (brief, max 100 words, optional)
- About the group (long description: max 500 words)
- Its field of study (e.g., Software Engineering, Network and Systems Administration, etc.)
- Its type (public or private)
- Its class (e.g., GL3C, GL2C, ASR1, etc.)
- Status (active, suspended)
- Visibility (public or private)

4. Creation and management of discussion rooms

- An authorized user creates a room for their class
- A user requests to join a private discussion room
- A user sends a message in a room

5. Creation and management of forums

- An authorized user creates a thematic forum
- A user requests to join a private forum
- A group administrator approves a membership request

### Posts and interactions

A post is characterized by:

- Its author
- Its content
- Media (photos, videos)
- Content (manual input with emojis)
- Number of likes

An event is characterized by:

- Its author
- Its collaborators(optionnal)
- Photo
- Number of participants
- Event name
- Event description
- Event start date
- Event end date (optional)
- Event location: on-site (entry of the place) or online (connection link)
- Event type (party, conference, tournament, exam, etc.)

A comment is characterized by:

- Its author
- Its content
- Number of likes

6. Content publication

- An authorized user creates a simple post
- An authorized user creates an event with location and date
- A user views posts
- A user views posts from a group they belong to

7. Social interactions

- A user can like a post
- A user can like a comment
- A user can comment on a post
- A user can comment on a comment
- A user can participate in an event

### Messaging and notifications

A message is identified by:

- Sender
- Recipient
- Read (read or unread)
- Content
- Message type (text, image, video)

A notification is characterized by:

- Sender
- Recipient
- Content
- Read (read or unread)
- Notification type: like, comment, new event, new post, approval request to join a group (with actions (accept, decline))
  Examples of notifications:
- Daryl has created a new event
- Alex has commented on your post
- John has requested to join the "Robotics" group
- Your membership request to the "Computer Science" group has been rejected
- Your membership request to the "Mathematics" group has been rejected

### Administration

10. Administrative dashboard

- An administrator views usage statistics
- An administrator moderates posts
- An administrator manages registration requests

11. Rights management

- A super-administrator assigns administration roles
- An administrator suspends a user
- An administrator suspends a group

## Underlying stack

**Nextjs 15**
**TailwindCSS V4**
**ReactJS 19**
**Convex**

</project>
